{"version":3,"sources":["Components/About/About.js","Components/Contact/Contact.js","Components/Header/Header.js","Components/Home/Home.js","Components/Projects/Projects.js","Components/Talks/Talks.js","Components/App/App.js","serviceWorker.js","index.js"],"names":["About","className","Contact","href","target","Header","exact","to","activeClassName","Home","Projects","src","alt","Talks","title","width","height","frameborder","allow","allowfullscreen","ReactGA","initialize","pageview","window","location","pathname","search","App","path","render","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.550100c3.chunk.js","sourcesContent":["import React from 'react'\nimport \"./About.css\"\n\nconst About = () => {\n\n    return (\n        <section className=\"about\">\n            <h2>about</h2>\n            <p>I have always been self-driven and eager to learn. In the past these skills have helped me excel in sales and sales management roles. As I pivot from that career path to software development they have become even more valuable. I enjoy meeting new challenges head-on and love the constant challenge that learning a new programming language or framework offers. As an economist, I am a firm believer in efficiency and am always looking for ways to refactor my code to make it more efficient. In a similar regard, I am always looking for ways to improve the processes that I build around my learning practices. I know that by focusing on the process and getting better each and every day, opportunities are endless. I am beyond excited to continue my growth as I move from Turing to the workforce. I look forward most to the new challenges, the opportunity to help others and the platform to contribute to my community. </p>\n\n            <h3>Interests</h3>\n            <ul>\n                <li>trail running</li>\n                <li>camping / backpacking</li>\n                <li>Wisconsin Badgers</li>\n                <li>Green Bay Packers</li>\n                <li>fishing</li>\n                <li>skiing</li>\n                <li>music</li>\n                <li>craft breweries</li>\n                <li>board games / puzzles</li>\n                <li>reading</li>\n                <li>my dog Scout and cat Zora</li>\n                <li>climbing</li>\n            </ul>\n        </section>\n    )\n}\n\nexport default About","import React from 'react'\nimport './Contact.css'\n\nconst Contact = () => {\n\n    return (\n        <section className=\"contact\">\n            <h2 className=\"contact-header\">contact</h2>\n                <p className=\"contact-info\">Email: pernitz@uwalumni.com</p>\n                <a href=\"https://www.linkedin.com/in/dave-pernitz/\" className=\"contact-info\" target=\"blank\">LinkedIn</a>\n                <a href=\"https://twitter.com/dave_pernitz\" className=\"contact-info\" target=\"blank\">Twitter</a>\n                <a href=\"https://github.com/pernstrong\" className=\"contact-info\" target=\"blank\">GitHub</a>\n        </section>\n    )\n}\n\nexport default Contact","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport './Header.css'\n\n// add condtional render for h1 to dissappear when on home...larger name in picture of body? might need to add state to App for onHome?\n\nconst Header = () => {\n    return (\n        <header>\n            <NavLink exact to=\"/dave-pernitz-portfolio\"\n            className=\"name-link\"\n            activeClassName=\"name-link-active\">\n                dave pernitz\n            </NavLink>\n            <nav>\n                <ul>\n                    <NavLink exact to=\"/dave-pernitz-portfolio\" className=\"nav-button\" activeClassName=\"nav-button-active\">\n                        <li>home</li>\n                    </NavLink>\n\n                    <NavLink to=\"/dave-pernitz-portfolio/about\" className=\"nav-button\" activeClassName=\"nav-button-active\">\n                        <li>about</li>\n                    </NavLink>\n\n                    <NavLink to=\"/dave-pernitz-portfolio/projects\" className=\"nav-button\" activeClassName=\"nav-button-active\">\n                        <li>projects</li>\n                    </NavLink>\n\n                    <NavLink to=\"/dave-pernitz-portfolio/talks\" className=\"nav-button\" activeClassName=\"nav-button-active\">\n                        <li>talks</li>\n                    </NavLink>\n\n                        {/* <NavLink to=\"/dave-pernitz-portfolio/workeducation\" className=\"nav-button\" activeClassName=\"nav-button-active\">\n                            <li>work/education</li>\n                        </NavLink> */}\n\n                    <NavLink to=\"/dave-pernitz-portfolio/contact\" className=\"nav-button\" activeClassName=\"nav-button-active\">\n                        <li>contact</li>\n                    </NavLink>\n\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default Header","import React from 'react'\nimport './Home.css'\n\nconst Home = () => {\n\n    return (\n        <section className=\"home\">\n            <p className=\"first-name\">dave</p>\n            <p className=\"last-name\">pernitz</p>\n            <p className=\"home-subtitle\">front-end developer</p>\n        </section>\n    )\n}\n\nexport default Home","import React from 'react'\nimport './Projects.css'\n\nconst Projects = () => {\n\n    const vradImage = '/dave-pernitz-portfolio/images/vrad.png'\n    const beersImage = '/dave-pernitz-portfolio/images/beers.png'\n    const overlookImage = '/dave-pernitz-portfolio/images/overlook.png'\n    const whatsNewImage = '/dave-pernitz-portfolio/images/whats-new.png'\n    const copWatchImage = '/dave-pernitz-portfolio/images/copwatch.png'\n    const nowWhatImage = '/dave-pernitz-portfolio/images/nowwhat.png'\n\n    return (\n        <section className=\"projects\">\n            <h2>projects</h2>\n            \n            <section className=\"project-card\">\n                <section className=\"column-one\">\n                    <h3>CopWatch</h3>\n                    <a href=\"https://github.com/pernstrong/CopWatch-FE\">GitHub Repository</a>\n                    <img src={`${copWatchImage}`} alt=\"screenshot of copwatch application home screen\" />\n                </section>\n                <section className=\"column-two\">\n                    <p>Key Technologies</p>\n                    <ul>\n                        <li>React Native</li>\n                        <li>Expo Toolchain</li>\n                        <li>Jest / React Testing Native Library</li>\n                        <li>Cloudinary</li>\n                        <li>Travis CI</li>\n                        <li>Python</li>\n                    </ul>\n                </section>\n            </section>\n\n            <section className=\"project-card\">\n                <section className=\"column-one\">\n                    <h3>Beers</h3>\n                    <a href=\"https://github.com/pernstrong/beers\">GitHub Repository</a>\n                    <a href=\"https://stark-ocean-21174.herokuapp.com/\">Deployed Site</a>\n                    <img src={`${beersImage}`} alt=\"screenshot of beers application home screen\" />\n                </section>\n                <section className=\"column-two\">\n                    <p>Key Technologies</p>\n                    <ul>\n                        <li>React with Hooks</li>\n                        <li>TypeScript</li>\n                        <li>Jest / React Testing Library</li>\n                        <li>React Router</li>\n                        <li>Network Requests / API</li>\n                        <li>Local Storage</li>\n                    </ul>\n                </section>\n            </section>\n\n            <section className=\"project-card\">\n                <section className=\"column-one\">\n                    <h3>Now What!?</h3>\n                    <a href=\"https://github.com/pernstrong/now-what\">GitHub Repository</a>\n                    <img src={`${nowWhatImage}`} alt=\"screenshot of now what application home screen\" />\n                </section>\n                <section className=\"column-two\">\n                    <p>Key Technologies</p>\n                    <ul>\n                        <li>React with Hooks</li>\n                        <li>TypeScript</li>\n                        <li>Jest / React Testing Library</li>\n                        <li>React Router</li>\n                        <li>TasteDive API</li>\n                        <li>Local Storage</li>\n                    </ul>\n                </section>\n            </section>\n\n            <section className=\"project-card\">\n                <section className=\"column-one\">\n                    <h3>VRAD - Vacation Rentals Around Denver</h3>\n                    <a href=\"https://github.com/pernstrong/VRAD\">GitHub Repository</a>\n                    <a href=\"https://pernstrong.github.io/VRAD\">Deployed Site</a>\n                    <img src={`${vradImage}`} alt=\"screenshot of vrad application home screen\" />\n                </section>\n                <section className=\"column-two\">\n                    <p>Key Technologies</p>\n                    <ul>\n                        <li>Network Requests / API</li>\n                        <li>React</li>\n                        <li>Jest / React Testing Library</li>\n                        <li>React Router</li>\n                        <li>React lifecycle methods</li>\n                        <li>PropTypes</li>\n                    </ul>\n                </section>\n            </section>\n            \n            <section className=\"project-card\">\n                <section className=\"column-one\">\n                    <h3>What's New</h3>\n                    <a href=\"https://github.com/pernstrong/whats-new\">GitHub Repository</a>\n                    <a href=\"https://pernstrong.github.io/whats-new\">Deployed Site</a>\n                    <img src={`${whatsNewImage}`} alt=\"screenshot of whats new application home screen\" />\n                </section>\n                <section className=\"column-two\">\n                    <p>Key Technologies</p>\n                    <ul>\n                        <li>React</li>\n                        <li>Network Requests / API</li>\n                        <li>Jest / React Testing Library</li>\n                        <li>PropTypes</li>\n                    </ul>\n                </section>\n            </section>\n\n            <section className=\"project-card\">\n                <section className=\"column-one\">\n                    <h3>Overlook</h3>\n                    <a href=\"https://github.com/pernstrong/overlook\">GitHub Repository</a>\n                    <img src={`${overlookImage}`} alt=\"screenshot of overlook application home screen\" />\n                </section>\n                <section className=\"column-two\">\n                <section className=\"column-two\">\n                    <p>Key Technologies</p>\n                    <ul>\n                        <li>jQuery</li>\n                        <li>Sass</li>\n                        <li>Network Requests / API</li>\n                        <li>Testing with Mocha, Chai and Chai Spies</li>\n                    </ul>\n                </section>\n                </section>\n            </section>\n\n        </section>\n    )\n}\n\nexport default Projects","import React from 'react'\nimport './Talks.css'\n\nconst Talks = () => {\n\n    return (\n        <section className=\"talks\">\n            <h2>talks</h2>\n            <section className=\"talk-card\">\n                <h3>Selling the JAMstack</h3>\n                <iframe title=\"jamstack-video\" width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/eYk0GmyEbcs\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n                <p>Selling the JAMstack is a presentation I gave at the JAMstack Denver meetup in June of 2020. The presentation combines my past experience in sales with my new experience as a developer in order to give tools and techniques for selling the JAMstack technologies. It is designed to help bridge the knowledge gap with the JAMstack and effectively communicate the benefits of the JAMstack.</p>\n            </section>\n            {/* <section className=\"talk-card\">\n                <h3>Supercomputers vs Evil</h3>\n                \n                <p>Super Computers vs Evil is a presentation I gave as part of Turing's Lightning Talks. It was then voted on and selected as one of a handful to be included in Turing's Top Talks which showcased the best of the Lightning Talks. The presentation focuses on IBM's Summit supercomputer and how it is being used to help analyze medical data. Cancer and Covid-19 are highlighted as areas that Summit is being utilized to help with scientific research.</p>\n            </section> */}\n\n        </section>\n    )\n}\n\nexport default Talks","import React, { useEffect } from 'react';\nimport './App.css';\nimport { Route, Switch } from 'react-router-dom'\n\nimport About from '../About/About'\nimport Contact from '../Contact/Contact'\nimport Header from '../Header/Header'\nimport Home from '../Home/Home'\nimport Projects from '../Projects/Projects'\nimport Talks from '../Talks/Talks'\n// import WorkEducation from '../WorkEducation/WorkEducation'\nimport ReactGA from 'react-ga'\nReactGA.initialize('UA-168111706-1')\nReactGA.pageview(window.location.pathname + window.location.search);\n\n\nfunction App() {\n\n\n\n\n  return (\n    <>\n      <Header />\n      <main>\n        <Switch>\n          <Route path=\"/dave-pernitz-portfolio/about\" render={() => <About /> } />\n          <Route path=\"/dave-pernitz-portfolio/projects\" render={() => <Projects /> } />\n          <Route path=\"/dave-pernitz-portfolio/talks\" render={() => <Talks /> } />\n          {/* <Route path=\"/dave-pernitz-portfolio/workeducation\" render={() => <WorkEducation /> } /> */}\n          <Route path=\"/dave-pernitz-portfolio/contact\" render={() => <Contact /> } />\n          <Route exact path=\"/dave-pernitz-portfolio\" render={() => <Home /> } />\n        </Switch>\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router} from 'react-router-dom'\nimport './index.css';\nimport App from './Components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}